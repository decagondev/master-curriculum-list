<?xml version="1.0" encoding="UTF-8"?>
<questestinterop xmlns="http://www.imsglobal.org/xsd/ims_qtiasiv1p2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/ims_qtiasiv1p2 http://www.imsglobal.org/xsd/ims_qtiasiv1p2p1.xsd">
  <assessment ident="gc28fdc92d54fac5b842addf1aeeb2026" title="Server-Side Routing with Express Check For Understanding">
    <qtimetadata>
      <qtimetadatafield>
        <fieldlabel>cc_maxattempts</fieldlabel>
        <fieldentry>unlimited</fieldentry>
      </qtimetadatafield>
    </qtimetadata>
    <section ident="root_section">
      <item ident="gd29af90218db635ebda1a53d649bc381" title="e87ea1b3-52db-40b3-9c9e-fdadf53ea66c">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>1.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>5400,4947,9114,7739</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;What is the code for creating an Express router?&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="5400">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;const router = express.Router();&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="4947">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;const router = new Router();&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="9114">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;const router = express.router;&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="7739">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;const router = express.router();&lt;/code&gt;</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">4947</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="4947_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">9114</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="9114_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">7739</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="7739_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">5400</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="general_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">The `Router` method exists in the main express object. Therefore, in order to invoke the `Router` function, you must call it with `express.Router()`.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="4947_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">The &lt;code&gt;new&lt;/code&gt; keyword in JavaScript is used to call a class that instantiates a new object. Since we call the &lt;code&gt;Router()&lt;/code&gt; method inside the main express object and are not building a new object, this wouldn't be the correct answer.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="9114_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">The &lt;code&gt;router&lt;/code&gt; method should have a capital R at the beginning: &lt;code&gt;Router()&lt;/code&gt;. Additionally, you need to call &lt;code&gt;Router&lt;/code&gt; like so: &lt;code&gt;express.Router()&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="7739_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;code&gt;router()&lt;/code&gt; should be capitalized like so &lt;code&gt;Router()&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g6489035f98a9c830b092514adac95b67" title="fea97f1a-b0df-405c-b13d-76591c9bfbe4">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>1.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>5201,4612,8097,4517</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;What is the code needed to export the &lt;code&gt;greeter&lt;/code&gt; function using CommonJS module syntax?&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="5201">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;module.exports = greeter;&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="4612">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;exports greeter;&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="8097">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;export greeter;&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="4517">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;module.export = greeter;&lt;/code&gt;</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">4612</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="4612_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">8097</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="8097_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">4517</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="4517_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">5201</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="general_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">In the CommonJS module format, every module object has an `exports` object. We want to assign any objects that we want other modules to be able to import to this object.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="4612_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;code&gt;exports&lt;/code&gt; is not a special keyword in JavaScript as this answer would imply. What we are actually trying to do is to assign the object we want to export to the &lt;code&gt;exports&lt;/code&gt; property on the &lt;code&gt;module&lt;/code&gt; object in the CommonJS format which Node.js relies on.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="8097_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;code&gt;export&lt;/code&gt; is not a special keyword in JavaScript as this answer would imply. What we are actually trying to do is to assign the object we want to export to the &lt;code&gt;exports&lt;/code&gt; property on the &lt;code&gt;Module&lt;/code&gt; object in the CommonJS format which Node.js relies on.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="4517_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">The correct property on the module object is &lt;code&gt;exports&lt;/code&gt;, not &lt;code&gt;export&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g666103382802f949ab0f173875118dfb" title="41c2b6fa-ce91-4f7d-aa82-d9f4b343a24f">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>1.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>8844,6096,6268,5853</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;What is the code to have the student router respond to all requests where the url starts with /api/students?&lt;/p&gt;
&lt;pre&gt;&lt;code class="js language-js"&gt;const express = require("express");
const studentsRouter = require("./students/router.js");
const server = express.server();
// code to use router for /api/students
______________________;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="8844">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;server.use('/api/students', studentsRouter);&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="6096">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;server.route('/api/students', studentsRouter);&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="6268">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;server.use('api/students', studentsRouter);&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="5853">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;server.get('/api/students').router(studentsRouter);&lt;/code&gt;</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">6096</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="6096_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">6268</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="6268_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">5853</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="5853_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">8844</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="general_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">A router object is an isolated instance of middleware and routes. You can think of it as a "mini-application," capable only of performing middleware and routing functions. Every Express application has a built-in app router.

A router behaves like middleware itself, so you can use it as an argument to app.use().</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="6096_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;code&gt;route&lt;/code&gt; is not an available method on the express application object &lt;code&gt;server&lt;/code&gt;. Additionally, what we are trying to do is to use a &lt;code&gt;Router&lt;/code&gt; instance as Middleware on our main application. To do so, we use the &lt;code&gt;use&lt;/code&gt; method on the express application object &lt;code&gt;server&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="6268_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">This answer is missing the beginning &lt;code&gt;/&lt;/code&gt; before &lt;code&gt;api&lt;/code&gt; in the route path.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="5853_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">This syntax is incorrect. What we are trying to do is to set up our &lt;code&gt;Router&lt;/code&gt; instance &lt;code&gt;studentsRouter&lt;/code&gt; as middleware to handle all of our students related routes. In order to do that, we want to pass our &lt;code&gt;studentsRouter&lt;/code&gt; into the &lt;code&gt;use&lt;/code&gt; method on the express application object &lt;code&gt;server&lt;/code&gt; along with the route path &lt;code&gt;'/api/students'&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="gab72be0ec3f93177cb60852d4f5966d2" title="a8728406-e244-4a31-ba2e-5086af074d6c">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>1.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>3830,229,5957,7194</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;What would be the query string needed to make the &lt;code&gt;req.query&lt;/code&gt; object equal to: &lt;code&gt;{ greeting: "hello", name: "sam" }&lt;/code&gt;?&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="3830">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;?name=sam&amp;amp;greeting=hello&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="229">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;?name:sam&amp;amp;greeting:hello&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="5957">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;&amp;amp;name=sam?greeting=hello&lt;/code&gt;</mattext>
                </material>
              </response_label>
              <response_label ident="7194">
                <material>
                  <mattext texttype="text/html">&lt;code&gt;&amp;amp;name:sam&amp;amp;greeting:hello&lt;/code&gt;</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">229</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="229_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">5957</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="5957_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">7194</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="7194_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">3830</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="general_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">The query string begins with the `?` symbol. After the `?`, key-value pairs are included in the `key=value` format. Each key-value pair is separated by the `&amp;amp;` symbol.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="229_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">In query strings, the key and the value in a key-value pair are separated by an &lt;code&gt;=&lt;/code&gt;, not a &lt;code&gt;:&lt;/code&gt;.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="5957_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">The symbol to mark the beginning of a query string is a &lt;code&gt;?&lt;/code&gt;, not an &lt;code&gt;&amp;amp;&lt;/code&gt;. The symbol to separate key-value pairs is the &lt;code&gt;&amp;amp;&lt;/code&gt;, not the &lt;code&gt;?&lt;/code&gt;. So, this answer has the &lt;code&gt;?&lt;/code&gt; and the &lt;code&gt;&amp;amp;&lt;/code&gt; flipped in the syntax.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="7194_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">The symbol to mark the beginning of a query string is a &lt;code&gt;?&lt;/code&gt;, not an &lt;code&gt;&amp;amp;&lt;/code&gt;. The key and the value in a key-value pair are separated by an &lt;code&gt;=&lt;/code&gt;, not a &lt;code&gt;:&lt;/code&gt;. This answer correctly uses the &lt;code&gt;&amp;amp;&lt;/code&gt; as the symbol used to separate key-value pairs.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="g2c53bd0f59ee7a7698e1735b71b974fb" title="9c1767aa-c275-43e1-bd06-d652a6ba7b39">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>1.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>3043,8147,9982,9878</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;Choose the answer that best describes what is wrong with the code snippet below.&lt;/p&gt;
&lt;pre&gt;&lt;code class="js language-js"&gt;router.get("/posts/:id", async (req, res) =&amp;gt;{
    if (!req.params.id) {
        res.status(404).json({
            message: "The post with the specified ID does not exist"
        })
    }
    ...
})&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="3043">
                <material>
                  <mattext texttype="text/plain">We never used the id to check if the post exists. Therefore, the status code and returned message give false information.</mattext>
                </material>
              </response_label>
              <response_label ident="8147">
                <material>
                  <mattext texttype="text/html">The &lt;code&gt;id&lt;/code&gt; property will be on the &lt;code&gt;req.query&lt;/code&gt; object, not the &lt;code&gt;req.params&lt;/code&gt; object.</mattext>
                </material>
              </response_label>
              <response_label ident="9982">
                <material>
                  <mattext texttype="text/html">The route path should include a &lt;code&gt;/&lt;/code&gt; at the end of the path like so: &lt;code&gt;"/posts/:id/"&lt;/code&gt;.</mattext>
                </material>
              </response_label>
              <response_label ident="9878">
                <material>
                  <mattext texttype="text/html">The correct status code to send back is &lt;code&gt;200&lt;/code&gt; because although the post wasn't found, there were no actual errors processing the request.</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">8147</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="8147_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">9982</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="9982_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">9878</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="9878_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">3043</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="general_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">The if statement is merely checking if the `id` parameter is falsy. This code did not actually check the data store for the existence of the post with the supplied id.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="8147_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;p&gt;Route parameters are named URL segments that are used to capture the values specified at their position in the URL. The captured values are populated in the req.params object, with the name of the route parameter specified in the path as their respective keys.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="plaintext language-plaintext"&gt;Route path: /users/:userId/books/:bookId
Request URL: http://localhost:3000/users/34/books/8989
req.params: { "userId": "34", "bookId": "8989" }&lt;/code&gt;&lt;/pre&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="9982_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">When defining endpoints, you always need to have the forward slash at the beginning: &lt;code&gt;"/posts/:id"&lt;/code&gt; but the forward slash at the end is not required.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="9878_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">The &lt;code&gt;200 OK&lt;/code&gt; status code would be incorrect here. The status code is not actually the primary problem with this code. The primary problem is that the if statement is merely checking if the &lt;code&gt;id&lt;/code&gt; parameter is falsy. This code did not actually check the data store for the existence of the post with the supplied id.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
      <item ident="gbe8c03c8b9286eea7f9cef7666810ffd" title="15ed443a-f877-4b1d-9832-6aac074ecc11">
        <itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_choice_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>1.0</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>975,4753,7392,65</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;Choose the answer that best describes what is wrong with the code snippet below.&lt;/p&gt;
&lt;pre&gt;&lt;code class="js language-js"&gt;router.get("/:id", (req, res) =&amp;gt; {
  const id = req.params.id;
  Posts.findById(id)
    .then((post) =&amp;gt; {
      if (post) {
        res.status(200).json(post);
      } else {
        res.status(400).json({ message: `Post: ${id} can not be found.` });
      }
    })
    .catch(() =&amp;gt; {
      res.status(500).json({ message: "Error retrieving the post." });
    });
});&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Single">
            <render_choice>
              <response_label ident="975">
                <material>
                  <mattext texttype="text/html">If the &lt;code&gt;post&lt;/code&gt; is not actually found and returned by the &lt;code&gt;Posts.findById()&lt;/code&gt; function call, then a &lt;code&gt;404&lt;/code&gt; status code should be returned, not a &lt;code&gt;400&lt;/code&gt; status code.</mattext>
                </material>
              </response_label>
              <response_label ident="4753">
                <material>
                  <mattext texttype="text/html">The &lt;code&gt;post&lt;/code&gt; should not actually be returned to the client. The only thing that should be returned is the post id.</mattext>
                </material>
              </response_label>
              <response_label ident="7392">
                <material>
                  <mattext texttype="text/plain">The function should use the async-await syntax.</mattext>
                </material>
              </response_label>
              <response_label ident="65">
                <material>
                  <mattext texttype="text/html">The &lt;code&gt;id&lt;/code&gt; property will be on the &lt;code&gt;req.query&lt;/code&gt; object, not the &lt;code&gt;req.params&lt;/code&gt; object.</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="Yes">
            <conditionvar>
              <other/>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="general_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">4753</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="4753_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">7392</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="7392_fb"/>
          </respcondition>
          <respcondition continue="Yes">
            <conditionvar>
              <varequal respident="response1">65</varequal>
            </conditionvar>
            <displayfeedback feedbacktype="Response" linkrefid="65_fb"/>
          </respcondition>
          <respcondition continue="No">
            <conditionvar>
              <varequal respident="response1">975</varequal>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
        <itemfeedback ident="general_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">The `400 Bad Request` status code means that the server cannot or will not process the request due to an apparent client error (e.g., malformed request syntax, size too large, invalid request message framing, or deceptive request routing). This is not the case here. The proper status code would be `404 Not Found` in this case.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="4753_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">This endpoint is designed for the client to obtain a post resource when they already have the id of the post. If we only returned the id, that would not make sense.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="7392_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/plain">This asynchronous style using .then() is just fine. You could use async-await if you wanted, but it is not required by any means.</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
        <itemfeedback ident="65_fb">
          <flow_mat>
            <material>
              <mattext texttype="text/html">&lt;p&gt;Route parameters are named URL segments that are used to capture the values specified at their position in the URL. The captured values are populated in the req.params object, with the name of the route parameter specified in the path as their respective keys.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="plaintext language-plaintext"&gt;Route path: /users/:userId/books/:bookId
Request URL: http://localhost:3000/users/34/books/8989
req.params: { "userId": "34", "bookId": "8989" }&lt;/code&gt;&lt;/pre&gt;</mattext>
            </material>
          </flow_mat>
        </itemfeedback>
      </item>
    </section>
  </assessment>
</questestinterop>
