<?xml version="1.0" encoding="UTF-8"?>
<questestinterop xmlns="http://www.imsglobal.org/xsd/ims_qtiasiv1p2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/ims_qtiasiv1p2 http://www.imsglobal.org/xsd/ims_qtiasiv1p2p1.xsd">
  <objectbank ident="g1b0daa5bd7bbbfc6c2a965153e747242">
    <qtimetadata>
      <qtimetadatafield>
        <fieldlabel>bank_title</fieldlabel>
        <fieldentry>Sprint 17/29 Linked Lists II Bank</fieldentry>
      </qtimetadatafield>
      <qtimetadatafield>
        <fieldlabel>bank_context_uuid</fieldlabel>
        <fieldentry>Vflisirdb2Bqm6W61vdGSJDFOFPtMqHUhbPgCsN7</fieldentry>
      </qtimetadatafield>
    </qtimetadata>
    <item ident="ged3c29cd3c25d2e9410b9d1bbf0582e1" title="Question">
      <itemmetadata>
        <qtimetadata>
          <qtimetadatafield>
            <fieldlabel>question_type</fieldlabel>
            <fieldentry>multiple_choice_question</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>points_possible</fieldlabel>
            <fieldentry>1.0</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>original_answer_ids</fieldlabel>
            <fieldentry>4144,1607,1760,5505</fieldentry>
          </qtimetadatafield>
        </qtimetadata>
      </itemmetadata>
      <presentation>
        <material>
          <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;What's the best way to reverse a linked list?&lt;/span&gt;&lt;/div&gt;</mattext>
        </material>
        <response_lid ident="response1" rcardinality="Single">
          <render_choice>
            <response_label ident="4144">
              <material>
                <mattext texttype="text/plain">Walk through reversing the next pointers along the way.</mattext>
              </material>
            </response_label>
            <response_label ident="1607">
              <material>
                <mattext texttype="text/plain">Convert to an array, reverse, then convert back.</mattext>
              </material>
            </response_label>
            <response_label ident="1760">
              <material>
                <mattext texttype="text/plain">Repeatedly walk through to the end node and add it to the front of a new list.</mattext>
              </material>
            </response_label>
            <response_label ident="5505">
              <material>
                <mattext texttype="text/plain">Use quick sort.</mattext>
              </material>
            </response_label>
          </render_choice>
        </response_lid>
      </presentation>
      <resprocessing>
        <outcomes>
          <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
        </outcomes>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">1607</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="1607_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">1760</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="1760_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">5505</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="5505_fb"/>
        </respcondition>
        <respcondition continue="No">
          <conditionvar>
            <varequal respident="response1">4144</varequal>
          </conditionvar>
          <setvar action="Set" varname="SCORE">100</setvar>
        </respcondition>
      </resprocessing>
      <itemfeedback ident="1607_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;This uses unnecessary extra space for the array and unnecessary time to copy the data back and forth.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="1760_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;It's possible to do this in one pass in O(n) time, as opposed to multiple passes for O(n&lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span&gt;2&lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span&gt;) time.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="5505_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;ul&gt;
&lt;li aria-level="3"&gt;&lt;i&gt;&lt;span&gt;Quicksort only works if you can randomly access elements, like in an array. Linked lists only support sequential access.&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
    </item>
    <item ident="g357cb0cb5c39df7712dea1c570f85384" title="Question">
      <itemmetadata>
        <qtimetadata>
          <qtimetadatafield>
            <fieldlabel>question_type</fieldlabel>
            <fieldentry>multiple_choice_question</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>points_possible</fieldlabel>
            <fieldentry>1.0</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>original_answer_ids</fieldlabel>
            <fieldentry>4674,7993,2771,6367</fieldentry>
          </qtimetadatafield>
        </qtimetadata>
      </itemmetadata>
      <presentation>
        <material>
          <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Linked lists are better than arrays at:&lt;/span&gt;&lt;/div&gt;</mattext>
        </material>
        <response_lid ident="response1" rcardinality="Single">
          <render_choice>
            <response_label ident="4674">
              <material>
                <mattext texttype="text/plain">Inserting elements at the front.</mattext>
              </material>
            </response_label>
            <response_label ident="7993">
              <material>
                <mattext texttype="text/plain">Finding elements with specific values.</mattext>
              </material>
            </response_label>
            <response_label ident="2771">
              <material>
                <mattext texttype="text/plain">Retrieving an element by its index.</mattext>
              </material>
            </response_label>
            <response_label ident="6367">
              <material>
                <mattext texttype="text/plain">Changing a value on a specific element.</mattext>
              </material>
            </response_label>
          </render_choice>
        </response_lid>
      </presentation>
      <resprocessing>
        <outcomes>
          <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
        </outcomes>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">7993</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="7993_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">2771</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="2771_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">6367</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="6367_fb"/>
        </respcondition>
        <respcondition continue="No">
          <conditionvar>
            <varequal respident="response1">4674</varequal>
          </conditionvar>
          <setvar action="Set" varname="SCORE">100</setvar>
        </respcondition>
      </resprocessing>
      <itemfeedback ident="7993_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;It's the same as an array for doing this: O(n) time to search the entire array or linked list.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="2771_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;ul&gt;
&lt;li aria-level="3"&gt;&lt;i&gt;&lt;span&gt;Arrays are better at this. They can retrieve data from an index in O(1) time, but the linked list needs to be traversed in O(n) time.&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="6367_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;ul&gt;
&lt;li aria-level="3"&gt;&lt;i&gt;&lt;span&gt;If you have the index to the value in the array or a pointer to the value in a linked list, both are O(1) for changing the value.&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
    </item>
    <item ident="g64cbfde68eccc4d95a400e863c13db7e" title="Question">
      <itemmetadata>
        <qtimetadata>
          <qtimetadatafield>
            <fieldlabel>question_type</fieldlabel>
            <fieldentry>multiple_choice_question</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>points_possible</fieldlabel>
            <fieldentry>1.0</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>original_answer_ids</fieldlabel>
            <fieldentry>9998,2181,483,3631</fieldentry>
          </qtimetadatafield>
        </qtimetadata>
      </itemmetadata>
      <presentation>
        <material>
          <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Deleting an element from an array is:&lt;/span&gt;&lt;/div&gt;</mattext>
        </material>
        <response_lid ident="response1" rcardinality="Single">
          <render_choice>
            <response_label ident="9998">
              <material>
                <mattext texttype="text/plain">Expensive because you have to shift the other elements down.</mattext>
              </material>
            </response_label>
            <response_label ident="2181">
              <material>
                <mattext texttype="text/plain">Cheap because you don't have to shift any elements.</mattext>
              </material>
            </response_label>
            <response_label ident="483">
              <material>
                <mattext texttype="text/plain">Expensive because you have to reassign all the next pointers.</mattext>
              </material>
            </response_label>
            <response_label ident="3631">
              <material>
                <mattext texttype="text/plain">Cheap because you just have to reassign a single pointer to the next element.</mattext>
              </material>
            </response_label>
          </render_choice>
        </response_lid>
      </presentation>
      <resprocessing>
        <outcomes>
          <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
        </outcomes>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">2181</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="2181_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">483</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="483_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">3631</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="3631_fb"/>
        </respcondition>
        <respcondition continue="No">
          <conditionvar>
            <varequal respident="response1">9998</varequal>
          </conditionvar>
          <setvar action="Set" varname="SCORE">100</setvar>
        </respcondition>
      </resprocessing>
      <itemfeedback ident="2181_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;span&gt;You &lt;/span&gt;&lt;span&gt;do &lt;/span&gt;&lt;i&gt;&lt;span&gt;have to shift elements. Deleting takes O(n) time.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="483_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;span&gt;Arrays &lt;/span&gt;&lt;i&gt;&lt;span&gt;don't have next pointers, so this answer doesn't apply.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="3631_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;This is true of linked lists, but not of arrays.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
    </item>
  </objectbank>
</questestinterop>
