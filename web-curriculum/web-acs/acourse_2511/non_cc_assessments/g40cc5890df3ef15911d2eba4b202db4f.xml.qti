<?xml version="1.0" encoding="UTF-8"?>
<questestinterop xmlns="http://www.imsglobal.org/xsd/ims_qtiasiv1p2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/ims_qtiasiv1p2 http://www.imsglobal.org/xsd/ims_qtiasiv1p2p1.xsd">
  <assessment ident="g40cc5890df3ef15911d2eba4b202db4f" title="Sprint 17 Check for Understanding">
    <qtimetadata>
      <qtimetadatafield>
        <fieldlabel>cc_maxattempts</fieldlabel>
        <fieldentry>unlimited</fieldentry>
      </qtimetadatafield>
    </qtimetadata>
    <section ident="root_section">
      <section ident="g8f2d44d1eab284fc58c910f373bef7bf" title="Sprint 17 Group">
        <selection_ordering>
          <selection>
            <selection_number>10</selection_number>
            <selection_extension>
              <points_per_item>1.0</points_per_item>
            </selection_extension>
          </selection>
        </selection_ordering>
        <item ident="ge2ffd0192ca059a8aad1d7864ce70567" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>true_false_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>3163,5344</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>gc613b16f242321872f28664d1dbc5e1e</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;You can solve any problem iteratively or recursively.&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="3163">
                  <material>
                    <mattext texttype="text/plain">True</mattext>
                  </material>
                </response_label>
                <response_label ident="5344">
                  <material>
                    <mattext texttype="text/plain">False</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">5344</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="5344_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">3163</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="5344_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;p&gt;&lt;i&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span&gt;You can solve any problem either way, but sometimes one approach can lead to a simpler, more elegant solution than the other.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;/i&gt;&lt;/p&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g929b4f0ea5171b5d31efa065b341b176" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>7058,1181,1300,1240</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>g7f90912e3d35c402a02dacd4a038de86</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;One of the most important things about coming up with a recursive solution is:&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="7058">
                  <material>
                    <mattext texttype="text/plain">Coming up with a recursive definition of the problem</mattext>
                  </material>
                </response_label>
                <response_label ident="1181">
                  <material>
                    <mattext texttype="text/plain">Returning the value from the recursive call</mattext>
                  </material>
                </response_label>
                <response_label ident="1300">
                  <material>
                    <mattext texttype="text/plain">Making sure you do your operations before the recursive call</mattext>
                  </material>
                </response_label>
                <response_label ident="1240">
                  <material>
                    <mattext texttype="text/plain">Making sure you do your operations after the recursive8 call</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">1181</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="1181_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">1300</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="1300_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">1240</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="1240_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">7058</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="1181_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;While important, it's not what you need to get started.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="1300_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;This is important because it changes the behavior of the function, but it's not what you need to get started.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="1240_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;This is important because it changes the behavior of the function, but it's not what you need to get started.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g64c3ebcda44e9f7d0fd4bcd58eb7b406" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>true_false_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>3253,8390</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>g64eaaa4b2407a1c628c91a1fe2e09be5</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Sometimes recursion might use more memory than an equivalent iterative solution.&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="3253">
                  <material>
                    <mattext texttype="text/plain">True</mattext>
                  </material>
                </response_label>
                <response_label ident="8390">
                  <material>
                    <mattext texttype="text/plain">False</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">8390</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="8390_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">3253</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="8390_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Each time you make a recursive call, a new stack frame is probably allocated. This takes memory.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="gbb4b70b3724fbb835b25c319f36bb4d1" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>937,9357,5551,482</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>g3e0277d7bd0d870fcfb9da2a53b72da7</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Recursion solutions tend to best well when&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="937">
                  <material>
                    <mattext texttype="text/plain">A problem is made up of identically-defined subproblems.</mattext>
                  </material>
                </response_label>
                <response_label ident="9357">
                  <material>
                    <mattext texttype="text/plain">A problem is made up of subproblems with different definitions.</mattext>
                  </material>
                </response_label>
                <response_label ident="5551">
                  <material>
                    <mattext texttype="text/plain">A problem contains a lot of loops.</mattext>
                  </material>
                </response_label>
                <response_label ident="482">
                  <material>
                    <mattext texttype="text/plain">A problem contains a lot of conditionals</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">9357</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="9357_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">5551</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="5551_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">482</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="482_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">937</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="9357_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;If every subproblem is different, you cannot apply the same function recursively to solve them.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="5551_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;While recursion can be used in place of a loop, the loop count of a program isn't a compelling reason to use recursion.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="482_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;The number of conditionals in a program isn't particularly related to the applicability of recursion.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g4f7a36147672e1caf56b72ff0ba1ea7e" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>146,5573,1711,1694</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>ge488eb41bde3a753a440122d9e9086df</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;The base case is:&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="146">
                  <material>
                    <mattext texttype="text/plain">The case that stops the recursion from continuing</mattext>
                  </material>
                </response_label>
                <response_label ident="5573">
                  <material>
                    <mattext texttype="text/plain">The case that starts the recursion at the beginning</mattext>
                  </material>
                </response_label>
                <response_label ident="1711">
                  <material>
                    <mattext texttype="text/plain">Code that is executed every function call</mattext>
                  </material>
                </response_label>
                <response_label ident="1694">
                  <material>
                    <mattext texttype="text/plain">When the algorithm switches from recursive to iterative</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">5573</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="5573_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">1711</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="1711_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">1694</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="1694_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">146</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="5573_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;You do have to call the function to kick off the recursion, but this is not the base case.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="1711_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;While the base case might be tested every recursive call, this is not the definition of the base case.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="1694_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;This is a perfectly legal thing to do, but it is unrelated to the base case.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g5c10a22671a5ba5138cd87681d3516fc" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>true_false_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>84,3321</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>g6e9082cbdb2e2706af0017a0e653aa67</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Each recursive call should drive the arguments away from the base case.&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="84">
                  <material>
                    <mattext texttype="text/plain">True</mattext>
                  </material>
                </response_label>
                <response_label ident="3321">
                  <material>
                    <mattext texttype="text/plain">False</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">84</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="84_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">3321</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="84_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Each time you call recursively, the arguments should be getting closer to the base case. The base case is what terminates the recursion, and if you're moving farther away from it, the program will recurse forever.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g3ea18695aaf4a97b19b4e3805b2d3e55" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>4144,1607,1760,5505</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;What's the best way to reverse a linked list?&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="4144">
                  <material>
                    <mattext texttype="text/plain">Walk through reversing the next pointers along the way.</mattext>
                  </material>
                </response_label>
                <response_label ident="1607">
                  <material>
                    <mattext texttype="text/plain">Convert to an array, reverse, then convert back.</mattext>
                  </material>
                </response_label>
                <response_label ident="1760">
                  <material>
                    <mattext texttype="text/plain">Repeatedly walk through to the end node and add it to the front of a new list.</mattext>
                  </material>
                </response_label>
                <response_label ident="5505">
                  <material>
                    <mattext texttype="text/plain">Use quick sort.</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">1607</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="1607_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">1760</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="1760_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">5505</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="5505_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">4144</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="1607_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;This uses unnecessary extra space for the array and unnecessary time to copy the data back and forth.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="1760_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;It's possible to do this in one pass in O(n) time, as opposed to multiple passes for O(n&lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span&gt;2&lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span&gt;) time.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="5505_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;ul&gt;
&lt;li aria-level="3"&gt;&lt;i&gt;&lt;span&gt;Quicksort only works if you can randomly access elements, like in an array. Linked lists only support sequential access.&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g1d97b17c8180f0ee85b5837ef6b33e59" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>4674,7993,2771,6367</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Linked lists are better than arrays at:&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="4674">
                  <material>
                    <mattext texttype="text/plain">Inserting elements at the front.</mattext>
                  </material>
                </response_label>
                <response_label ident="7993">
                  <material>
                    <mattext texttype="text/plain">Finding elements with specific values.</mattext>
                  </material>
                </response_label>
                <response_label ident="2771">
                  <material>
                    <mattext texttype="text/plain">Retrieving an element by its index.</mattext>
                  </material>
                </response_label>
                <response_label ident="6367">
                  <material>
                    <mattext texttype="text/plain">Changing a value on a specific element.</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">7993</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="7993_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">2771</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="2771_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">6367</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="6367_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">4674</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="7993_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;It's the same as an array for doing this: O(n) time to search the entire array or linked list.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="2771_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;ul&gt;
&lt;li aria-level="3"&gt;&lt;i&gt;&lt;span&gt;Arrays are better at this. They can retrieve data from an index in O(1) time, but the linked list needs to be traversed in O(n) time.&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="6367_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;ul&gt;
&lt;li aria-level="3"&gt;&lt;i&gt;&lt;span&gt;If you have the index to the value in the array or a pointer to the value in a linked list, both are O(1) for changing the value.&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g7185f8b9aadf5c79e1b72362c35ba8b4" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>9998,2181,483,3631</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>gf47b767d37e06559ff801f2d253307ba</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Deleting an element from an array is:&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="9998">
                  <material>
                    <mattext texttype="text/plain">Expensive because you have to shift the other elements down.</mattext>
                  </material>
                </response_label>
                <response_label ident="2181">
                  <material>
                    <mattext texttype="text/plain">Cheap because you don't have to shift any elements.</mattext>
                  </material>
                </response_label>
                <response_label ident="483">
                  <material>
                    <mattext texttype="text/plain">Expensive because you have to reassign all the next pointers.</mattext>
                  </material>
                </response_label>
                <response_label ident="3631">
                  <material>
                    <mattext texttype="text/plain">Cheap because you just have to reassign a single pointer to the next element.</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">2181</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="2181_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">483</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="483_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">3631</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="3631_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">9998</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="2181_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;span&gt;You &lt;/span&gt;&lt;span&gt;do &lt;/span&gt;&lt;i&gt;&lt;span&gt;have to shift elements. Deleting takes O(n) time.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="483_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;span&gt;Arrays &lt;/span&gt;&lt;i&gt;&lt;span&gt;don't have next pointers, so this answer doesn't apply.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="3631_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;This is true of linked lists, but not of arrays.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g4d2c15a8228c2ee8b0c591394dcff35e" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>2624,5770,3229,6093</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>gdd340fb502049589301063fa126420d3</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Why is a linked list a good choice for implementing a queue versus an array?&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="2624">
                  <material>
                    <mattext texttype="text/plain">You get O(1) for both enqueue and dequeue operations.</mattext>
                  </material>
                </response_label>
                <response_label ident="5770">
                  <material>
                    <mattext texttype="text/plain">You get O(1) for enqueue and O(n) for dequeue operations.</mattext>
                  </material>
                </response_label>
                <response_label ident="3229">
                  <material>
                    <mattext texttype="text/plain">You get O(n) for enqueue and O(1) for dequeue operations.</mattext>
                  </material>
                </response_label>
                <response_label ident="6093">
                  <material>
                    <mattext texttype="text/plain">You get O(n) for both enqueue and dequeue operations.</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">5770</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="5770_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">3229</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="3229_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">6093</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="6093_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">2624</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="5770_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Arrays are O(1) for one queue function and O(n) for the other. But linked lists are better.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="3229_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Arrays are O(1) for one queue function and O(n) for the other. But linked lists are better.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="6093_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Arrays are O(1) for one queue function and O(n) for the other. But linked lists are better.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="gb17b544c33e392b957aa44203f8f8bcc" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>3290,9079,3559,8483</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>gcd40581e2e10a218eebb06345bba45b4</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;When you want to process things in the reverse order that they originally arrived:&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="3290">
                  <material>
                    <mattext texttype="text/plain">A stack is better than a queue.</mattext>
                  </material>
                </response_label>
                <response_label ident="9079">
                  <material>
                    <mattext texttype="text/plain">A queue is better than a stack.</mattext>
                  </material>
                </response_label>
                <response_label ident="3559">
                  <material>
                    <mattext texttype="text/plain">Both stacks and queues are equally good.</mattext>
                  </material>
                </response_label>
                <response_label ident="8483">
                  <material>
                    <mattext texttype="text/plain">Neither stacks nor queues are good with this.</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">9079</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="9079_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">3559</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="3559_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">8483</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="8483_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">3290</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="9079_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Queues process data in the same order it was put in the queue. Stacks do it in the reverse order.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="3559_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Queues process data in the same order it was put in the queue. Stacks do it in the reverse order.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="8483_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Queues process data in the same order it was put in the queue. Stacks do it in the reverse order.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
        <item ident="g5b466173d96f6e0f83b161848413db41" title="Question">
          <itemmetadata>
            <qtimetadata>
              <qtimetadatafield>
                <fieldlabel>question_type</fieldlabel>
                <fieldentry>multiple_choice_question</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>points_possible</fieldlabel>
                <fieldentry>1.0</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>original_answer_ids</fieldlabel>
                <fieldentry>390,656,8012,8640</fieldentry>
              </qtimetadatafield>
              <qtimetadatafield>
                <fieldlabel>assessment_question_identifierref</fieldlabel>
                <fieldentry>g27b693ade61e300055f401d6442e88aa</fieldentry>
              </qtimetadatafield>
            </qtimetadata>
          </itemmetadata>
          <presentation>
            <material>
              <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;When you want to process things in the same order that they originally arrived:&lt;/span&gt;&lt;/div&gt;</mattext>
            </material>
            <response_lid ident="response1" rcardinality="Single">
              <render_choice>
                <response_label ident="390">
                  <material>
                    <mattext texttype="text/plain">A queue is better than a stack.</mattext>
                  </material>
                </response_label>
                <response_label ident="656">
                  <material>
                    <mattext texttype="text/plain">A stack is better than a queue.</mattext>
                  </material>
                </response_label>
                <response_label ident="8012">
                  <material>
                    <mattext texttype="text/plain">Both stacks and queues are equally good.</mattext>
                  </material>
                </response_label>
                <response_label ident="8640">
                  <material>
                    <mattext texttype="text/plain">Neither stacks nor queues are good with this.</mattext>
                  </material>
                </response_label>
              </render_choice>
            </response_lid>
          </presentation>
          <resprocessing>
            <outcomes>
              <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
            </outcomes>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">656</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="656_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">8012</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="8012_fb"/>
            </respcondition>
            <respcondition continue="Yes">
              <conditionvar>
                <varequal respident="response1">8640</varequal>
              </conditionvar>
              <displayfeedback feedbacktype="Response" linkrefid="8640_fb"/>
            </respcondition>
            <respcondition continue="No">
              <conditionvar>
                <varequal respident="response1">390</varequal>
              </conditionvar>
              <setvar action="Set" varname="SCORE">100</setvar>
            </respcondition>
          </resprocessing>
          <itemfeedback ident="656_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Queues process data in the same order it was put in the queue. Stacks do it in the reverse order.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="8012_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Queues process data in the same order it was put in the queue. Stacks do it in the reverse order.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
          <itemfeedback ident="8640_fb">
            <flow_mat>
              <material>
                <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Queues process data in the same order it was put in the queue. Stacks do it in the reverse order.&lt;/span&gt;&lt;/i&gt;</mattext>
              </material>
            </flow_mat>
          </itemfeedback>
        </item>
      </section>
    </section>
  </assessment>
</questestinterop>
