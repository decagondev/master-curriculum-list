<?xml version="1.0" encoding="UTF-8"?>
<questestinterop xmlns="http://www.imsglobal.org/xsd/ims_qtiasiv1p2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/ims_qtiasiv1p2 http://www.imsglobal.org/xsd/ims_qtiasiv1p2p1.xsd">
  <objectbank ident="gdd4cea1384048eacd88840ee09b2adfe">
    <qtimetadata>
      <qtimetadatafield>
        <fieldlabel>bank_title</fieldlabel>
        <fieldentry>Sprint 19/31 Sorting I</fieldentry>
      </qtimetadatafield>
      <qtimetadatafield>
        <fieldlabel>bank_context_uuid</fieldlabel>
        <fieldentry>Vflisirdb2Bqm6W61vdGSJDFOFPtMqHUhbPgCsN7</fieldentry>
      </qtimetadatafield>
    </qtimetadata>
    <item ident="g86108bb184a5df8729d327793ffbfcce" title="Question">
      <itemmetadata>
        <qtimetadata>
          <qtimetadatafield>
            <fieldlabel>question_type</fieldlabel>
            <fieldentry>multiple_choice_question</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>points_possible</fieldlabel>
            <fieldentry>1.0</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>original_answer_ids</fieldlabel>
            <fieldentry>7315,2205,5460,8588</fieldentry>
          </qtimetadatafield>
        </qtimetadata>
      </itemmetadata>
      <presentation>
        <material>
          <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;What is the average time complexity of sorts like Bubble Sort and Insertion Sort?&lt;/span&gt;&lt;/div&gt;</mattext>
        </material>
        <response_lid ident="response1" rcardinality="Single">
          <render_choice>
            <response_label ident="7315">
              <material>
                <mattext texttype="text/plain">O(n2)</mattext>
              </material>
            </response_label>
            <response_label ident="2205">
              <material>
                <mattext texttype="text/plain">O(1)</mattext>
              </material>
            </response_label>
            <response_label ident="5460">
              <material>
                <mattext texttype="text/plain">O(n)</mattext>
              </material>
            </response_label>
            <response_label ident="8588">
              <material>
                <mattext texttype="text/plain">O(n log n)</mattext>
              </material>
            </response_label>
          </render_choice>
        </response_lid>
      </presentation>
      <resprocessing>
        <outcomes>
          <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
        </outcomes>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">2205</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="2205_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">5460</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="5460_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">8588</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="8588_fb"/>
        </respcondition>
        <respcondition continue="No">
          <conditionvar>
            <varequal respident="response1">7315</varequal>
          </conditionvar>
          <setvar action="Set" varname="SCORE">100</setvar>
        </respcondition>
      </resprocessing>
      <itemfeedback ident="2205_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Only a sort over a hard-coded number of elements can work in constant time. Anything that supports a variable number of elements cannot be constant time.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="5460_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Some specialized non-comparison sorts like Count Sort operate in linear time. But no general-purpose comparison sorts do.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="8588_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Some divide-and-conquer sorts like Quicksort operate in O(n log n) time, but Bubble Sort and Insertion Sort are not divide-and-conquer.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
    </item>
    <item ident="g3b3df8e25ea7fa5d1bd429467bd95f5c" title="Question">
      <itemmetadata>
        <qtimetadata>
          <qtimetadatafield>
            <fieldlabel>question_type</fieldlabel>
            <fieldentry>multiple_choice_question</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>points_possible</fieldlabel>
            <fieldentry>1.0</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>original_answer_ids</fieldlabel>
            <fieldentry>9347,6454,634,1148</fieldentry>
          </qtimetadatafield>
        </qtimetadata>
      </itemmetadata>
      <presentation>
        <material>
          <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;In what case does Bubble Sort outperform a basic Quicksort?&lt;/span&gt;&lt;/div&gt;</mattext>
        </material>
        <response_lid ident="response1" rcardinality="Single">
          <render_choice>
            <response_label ident="9347">
              <material>
                <mattext texttype="text/plain">When the input array is already sorted.</mattext>
              </material>
            </response_label>
            <response_label ident="6454">
              <material>
                <mattext texttype="text/plain">When the input array is already sorted in reverse.</mattext>
              </material>
            </response_label>
            <response_label ident="634">
              <material>
                <mattext texttype="text/plain">When the input array is very large.</mattext>
              </material>
            </response_label>
            <response_label ident="1148">
              <material>
                <mattext texttype="text/plain">When the input array is empty.</mattext>
              </material>
            </response_label>
          </render_choice>
        </response_lid>
      </presentation>
      <resprocessing>
        <outcomes>
          <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
        </outcomes>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">6454</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="6454_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">634</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="634_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">1148</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="1148_fb"/>
        </respcondition>
        <respcondition continue="No">
          <conditionvar>
            <varequal respident="response1">9347</varequal>
          </conditionvar>
          <setvar action="Set" varname="SCORE">100</setvar>
        </respcondition>
      </resprocessing>
      <itemfeedback ident="6454_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;p&gt;&lt;i&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;span&gt;Bubble Sort and Quicksort are equally bad in this case at O(n&lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span&gt;2&lt;/span&gt;&lt;/i&gt;&lt;i&gt;&lt;span&gt;).&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;&lt;/i&gt;&lt;/p&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="634_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Quicksort is definitely better with large arrays.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="1148_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Bubble Sort and Quicksort will complete this equally quickly.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
    </item>
    <item ident="g84914847b4d2fda9cd2f24de3f6f7a56" title="Question">
      <itemmetadata>
        <qtimetadata>
          <qtimetadatafield>
            <fieldlabel>question_type</fieldlabel>
            <fieldentry>multiple_choice_question</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>points_possible</fieldlabel>
            <fieldentry>1.0</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>original_answer_ids</fieldlabel>
            <fieldentry>1199,3037,9045,8527</fieldentry>
          </qtimetadatafield>
        </qtimetadata>
      </itemmetadata>
      <presentation>
        <material>
          <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;For each pass through the array with Insertion sort or Bubble Sort, how many more elements are placed in their final position?&lt;/span&gt;&lt;/div&gt;</mattext>
        </material>
        <response_lid ident="response1" rcardinality="Single">
          <render_choice>
            <response_label ident="1199">
              <material>
                <mattext texttype="text/plain">1</mattext>
              </material>
            </response_label>
            <response_label ident="3037">
              <material>
                <mattext texttype="text/plain">2</mattext>
              </material>
            </response_label>
            <response_label ident="9045">
              <material>
                <mattext texttype="text/plain">4</mattext>
              </material>
            </response_label>
            <response_label ident="8527">
              <material>
                <mattext texttype="text/plain">Twice as many as on the previous pass.</mattext>
              </material>
            </response_label>
          </render_choice>
        </response_lid>
      </presentation>
      <resprocessing>
        <outcomes>
          <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
        </outcomes>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">3037</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="3037_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">9045</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="9045_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">8527</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="8527_fb"/>
        </respcondition>
        <respcondition continue="No">
          <conditionvar>
            <varequal respident="response1">1199</varequal>
          </conditionvar>
          <setvar action="Set" varname="SCORE">100</setvar>
        </respcondition>
      </resprocessing>
      <itemfeedback ident="3037_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Each pass through Bubble Sort only bubbles one element to its final position.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="9045_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Each pass through Bubble Sort only bubbles one element to its final position.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="8527_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;You're thinking of a divide-and-conquer sort like Quicksort or Merge Sort. Each pass through Bubble Sort only bubbles one element to its final position.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
    </item>
    <item ident="g4e748655066f9cd4a64b20bb00186527" title="Question">
      <itemmetadata>
        <qtimetadata>
          <qtimetadatafield>
            <fieldlabel>question_type</fieldlabel>
            <fieldentry>multiple_choice_question</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>points_possible</fieldlabel>
            <fieldentry>1.0</fieldentry>
          </qtimetadatafield>
          <qtimetadatafield>
            <fieldlabel>original_answer_ids</fieldlabel>
            <fieldentry>5900,6432,6194,8242</fieldentry>
          </qtimetadatafield>
        </qtimetadata>
      </itemmetadata>
      <presentation>
        <material>
          <mattext texttype="text/html">&lt;div&gt;&lt;span&gt;Sorting the data ahead of time with an O(n log n) sort is worth it if:&lt;/span&gt;&lt;/div&gt;</mattext>
        </material>
        <response_lid ident="response1" rcardinality="Single">
          <render_choice>
            <response_label ident="5900">
              <material>
                <mattext texttype="text/plain">You're going to be processing the data repeatedly and you get a time complexity benefit from having sorted data.</mattext>
              </material>
            </response_label>
            <response_label ident="6432">
              <material>
                <mattext texttype="text/plain">You're going to be processing the data once and you want the time complexity benefit from having sorted data.</mattext>
              </material>
            </response_label>
            <response_label ident="6194">
              <material>
                <mattext texttype="text/plain">It's always worth it.</mattext>
              </material>
            </response_label>
            <response_label ident="8242">
              <material>
                <mattext texttype="text/plain">It's never worth it.</mattext>
              </material>
            </response_label>
          </render_choice>
        </response_lid>
      </presentation>
      <resprocessing>
        <outcomes>
          <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
        </outcomes>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">6432</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="6432_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">6194</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="6194_fb"/>
        </respcondition>
        <respcondition continue="Yes">
          <conditionvar>
            <varequal respident="response1">8242</varequal>
          </conditionvar>
          <displayfeedback feedbacktype="Response" linkrefid="8242_fb"/>
        </respcondition>
        <respcondition continue="No">
          <conditionvar>
            <varequal respident="response1">5900</varequal>
          </conditionvar>
          <setvar action="Set" varname="SCORE">100</setvar>
        </respcondition>
      </resprocessing>
      <itemfeedback ident="6432_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;Since sorting the data takes O(n log n) time, you're unlikely to realize enough savings in your single pass to make up that time.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="6194_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;i&gt;&lt;span&gt;&amp;nbsp;It's more likely worth it if you are going to be repeatedly processing the data and sorting gives you some time complexity benefit while doing so.&lt;/span&gt;&lt;/i&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
      <itemfeedback ident="8242_fb">
        <flow_mat>
          <material>
            <mattext texttype="text/html">&lt;p&gt;&lt;i&gt;&lt;span&gt;It's more likely worth it if you are going to be repeatedly processing the data and sorting gives you some time complexity benefit while doing so.&lt;/span&gt;&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</mattext>
          </material>
        </flow_mat>
      </itemfeedback>
    </item>
  </objectbank>
</questestinterop>
